/**
 * Button Component Styles
 * 
 * Implements gradient styles with consistent patterns
 */

// Import only required mixins and avoid circular dependencies
@import '../../../../styles/design-system/mixins/_button-mixins';
@import '../../../../styles/design-system/compatibility/_compatibility';

.btn {
  @include button-base;
  
  // Sizes
  &--sm {
    @include button-size('sm');
  }
  
  &--md {
    @include button-size('md');
  }
  
  &--lg {
    @include button-size('lg');
  }
  
  // Variants with gradient support
  &--primary {
    @include button-styling('primary');
  }
  
  &--secondary {
    @include button-styling('secondary');
  }
  
  &--outline {
    @include button-styling('outline');
  }
  
  &--text {
    @include button-styling('text');
  }
  
  // States
  &--loading {
    cursor: wait;
    pointer-events: none;
    
    &.btn--primary {
      @include loading-state('primary');
    }
    
    &.btn--secondary {
      @include loading-state('secondary');
    }
    
    &.btn--outline {
      @include loading-state('outline');
    }
    
    &.btn--text {
      @include loading-state('text');
    }
  }
  
  &--disabled,
  &:disabled {
    @include disabled-state();
  }
  
  // Icons with consistent spacing
  &__icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    
    &--start {
      margin-right: button-base('icon-spacing');
    }
    
    &--end {
      margin-left: button-base('icon-spacing');
    }
  }
  
  // Content wrapper for proper alignment
  &__content {
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
    z-index: 1; 
    width: 100%;
  }
  
  // Full width option
  &--full-width {
    width: 100%;
    
    .btn__text {
      flex: 1;
    }
  }
  
  // Ensure content is centered and text wrapping is properly handled
  &__text {
    position: relative;
    z-index: 1;
  }
  
  // Add subtle active state for all buttons
  &:active:not(:disabled):not(.btn--loading) {
    transform: translateY(1px);
  }
}

@keyframes button-spin {
  to {
    transform: rotate(360deg);
  }
}
