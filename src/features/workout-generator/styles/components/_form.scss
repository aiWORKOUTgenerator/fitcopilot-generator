/**
 * Form Elements
 * Styles for form controls in workout generator
 */

@import '../_variables';
@import '../../../../styles/design-system/_compatibility';

/* Form container */
.workout-generator-form {
  background-color: var(--color-surface);
  padding: $wg-spacing-lg;
  border-radius: $wg-border-radius;
  box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.1);
  margin-bottom: $wg-spacing-xl;
  max-width: 650px;
  margin: 0 auto;
  
  .dark-theme & {
    background-color: var(--color-dark-bg);
    box-shadow: 0 1px 3px 0 rgba(0, 0, 0, 0.3);
  }
}

/* Form elements */
.form-group {
  margin-bottom: $wg-spacing-lg;
}

.form-label {
  display: block;
  @include form-label-styling();
  margin-bottom: $wg-spacing-sm;
  
  .dark-theme & {
    @include form-label-styling(true);
  }
}

.form-error {
  @include form-error-styling();
  margin-left: $wg-spacing-sm;
  
  .dark-theme & {
    @include form-error-styling(true);
  }
}

.form-select {
  display: block;
  width: 100%;
  padding: $spacing-3 $spacing-4;
  @include input-border();
  border-radius: $wg-border-radius;
  @include input-bg-color();
  @include input-text-color();
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.5rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  transition: compat-transition-preset('input');
  
  &:hover:not(:disabled) {
    @include input-border('hover');
  }
  
  &:focus:not(:disabled) {
    @include input-border('focus');
    @include input-focus-ring();
    outline: none;
  }
  
  &:disabled {
    @include input-bg-color('disabled');
    @include input-text-color('disabled');
    @include input-border('disabled');
    cursor: not-allowed;
  }
  
  .dark-theme & {
    @include input-bg-color(null, true);
    @include input-text-color(null, true);
    @include input-border(null, true);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23aaaaaa' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    
    &:hover:not(:disabled) {
      @include input-border('hover', true);
    }
    
    &:focus:not(:disabled) {
      @include input-border('focus', true);
      @include input-focus-ring(null, true);
    }
    
    &:disabled {
      @include input-bg-color('disabled', true);
      @include input-text-color('disabled', true);
      @include input-border('disabled', true);
    }
  }
  
  &--error {
    @include input-border('error');
    
    &:focus {
      @include input-focus-ring('error');
    }
    
    .dark-theme & {
      @include input-border('error', true);
      
      &:focus {
        @include input-focus-ring('error', true);
      }
    }
  }
}

.form-textarea {
  display: block;
  width: 100%;
  padding: $spacing-3 $spacing-4;
  @include input-border();
  border-radius: $wg-border-radius;
  @include input-bg-color();
  @include input-text-color();
  min-height: 100px;
  resize: vertical;
  transition: compat-transition-preset('input');
  
  &:hover:not(:disabled) {
    @include input-border('hover');
  }
  
  &:focus:not(:disabled) {
    @include input-border('focus');
    @include input-focus-ring();
    outline: none;
  }
  
  &:disabled {
    @include input-bg-color('disabled');
    @include input-text-color('disabled');
    @include input-border('disabled');
    cursor: not-allowed;
  }
  
  &::placeholder {
    @include input-placeholder-color();
  }
  
  .dark-theme & {
    @include input-bg-color(null, true);
    @include input-text-color(null, true);
    @include input-border(null, true);
    
    &:hover:not(:disabled) {
      @include input-border('hover', true);
    }
    
    &:focus:not(:disabled) {
      @include input-border('focus', true);
      @include input-focus-ring(null, true);
    }
    
    &:disabled {
      @include input-bg-color('disabled', true);
      @include input-text-color('disabled', true);
      @include input-border('disabled', true);
    }
    
    &::placeholder {
      @include input-placeholder-color(true);
    }
  }
  
  &--error {
    @include input-border('error');
    
    &:focus {
      @include input-focus-ring('error');
    }
    
    .dark-theme & {
      @include input-border('error', true);
      
      &:focus {
        @include input-focus-ring('error', true);
      }
    }
  }
}

/* Difficulty options (radio buttons) */
.difficulty-options {
  display: flex;
  gap: $wg-spacing-lg;
  margin-top: $wg-spacing-sm;
}

.difficulty-option {
  display: flex;
  align-items: center;
  @include input-text-color();
  
  .dark-theme & {
    @include input-text-color(null, true);
  }
  
  input[type="radio"] {
    margin-right: $wg-spacing-sm;
    
    &:focus {
      outline: none;
      @include input-focus-ring();
    }
    
    .dark-theme & {
      &:focus {
        @include input-focus-ring(null, true);
      }
    }
  }
}

/* Advanced options toggle */
.advanced-options-toggle {
  display: flex;
  align-items: center;
  justify-content: space-between;
  width: 100%;
  padding: $spacing-3 $spacing-4;
  background-color: var(--color-surface);
  border: 1px solid var(--color-wg-primary);
  border-radius: $wg-border-radius;
  color: var(--color-wg-primary);
  font-weight: $font-weight-medium;
  cursor: pointer;
  text-align: left;
  transition: compat-transition-preset('button');
  
  &:hover {
    background-color: rgba(var(--color-primary-rgb), 0.05);
  }
  
  &:focus {
    outline: none;
    @include input-focus-ring();
  }
  
  .dark-theme & {
    background-color: var(--color-dark-surface);
    border-color: var(--color-dark-primary);
    color: var(--color-dark-primary);
    
    &:hover {
      background-color: rgba(var(--color-dark-primary-rgb), 0.1);
    }
    
    &:focus {
      @include input-focus-ring(null, true);
    }
  }
}

.advanced-options {
  background-color: var(--color-surface-accent);
  border: 1px solid var(--color-border);
  border-radius: $wg-border-radius;
  padding: $spacing-4;
  margin-top: -$spacing-3;
  margin-bottom: $wg-spacing-lg;
  
  .dark-theme & {
    background-color: var(--color-dark-surface);
    border-color: var(--color-dark-border);
  }
}

.advanced-options-icon {
  font-size: $font-size-xs;
}

/* Equipment options */
.equipment-options {
  display: grid;
  grid-template-columns: repeat(2, 1fr);
  gap: $spacing-3;
  margin-top: $wg-spacing-sm;
}

.equipment-option {
  display: flex;
  align-items: center;
  @include input-text-color();
  
  .dark-theme & {
    @include input-text-color(null, true);
  }
  
  input[type="checkbox"] {
    margin-right: $wg-spacing-sm;
    
    &:focus {
      outline: none;
      @include input-focus-ring();
    }
    
    .dark-theme & {
      &:focus {
        @include input-focus-ring(null, true);
      }
    }
  }
} 