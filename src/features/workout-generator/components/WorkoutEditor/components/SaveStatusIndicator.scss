/**
 * Save Status Indicator Styles
 * 
 * Glass morphism styling with design system tokens for save status feedback.
 * Includes animations, state variations, and responsive design.
 */

@import '../../../../../styles/design-system/tokens/index.scss';

// Component-specific tokens
$indicator-height: 32px;
$indicator-height-compact: 24px;
$indicator-padding: var(--spacing-sm, 0.5rem) var(--spacing-md, 1rem);
$indicator-padding-compact: var(--spacing-xs, 0.25rem) var(--spacing-sm, 0.5rem);
$indicator-glass-bg: rgba(255, 255, 255, 0.08);
$indicator-glass-border: rgba(255, 255, 255, 0.12);
$indicator-backdrop-blur: blur(12px);

.save-status-indicator {
  display: inline-flex;
  align-items: center;
  height: $indicator-height;
  padding: $indicator-padding;
  background: $indicator-glass-bg;
  backdrop-filter: $indicator-backdrop-blur;
  border: 1px solid $indicator-glass-border;
  border-radius: var(--border-radius-lg, 12px);
  font-size: var(--font-size-sm, 0.875rem);
  font-weight: var(--font-weight-medium, 500);
  transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);

  // Compact variant
  &--compact {
    height: $indicator-height-compact;
    padding: $indicator-padding-compact;
    font-size: var(--font-size-xs, 0.75rem);
    border-radius: var(--border-radius-md, 8px);
  }

  // Content container
  &__content {
    display: flex;
    align-items: center;
    gap: var(--spacing-xs, 0.25rem);
    white-space: nowrap;

    // Saving state
    &--saving {
      color: var(--color-info-400, #60a5fa);

      .save-status-indicator__icon--spinning {
        animation: spin 1s linear infinite;
      }
    }

    // Saved state
    &--saved {
      color: var(--color-success-400, #4ade80);
    }

    // Error state
    &--error {
      color: var(--color-error-400, #f87171);
    }

    // Conflict state
    &--conflict {
      color: var(--color-warning-400, #fbbf24);
    }

    // Unsaved changes state
    &--unsaved {
      color: var(--color-warning-400, #fbbf24);

      .save-status-indicator__icon--unsaved {
        animation: pulse 2s infinite;
      }
    }

    // Idle state
    &--idle {
      color: var(--color-text-secondary, #9ca3af);
    }
  }

  // Icons
  &__icon {
    flex-shrink: 0;
    opacity: 0.9;

    &--success {
      color: var(--color-success-500, #22c55e);
    }

    &--error {
      color: var(--color-error-500, #ef4444);
    }

    &--warning {
      color: var(--color-warning-500, #f59e0b);
    }

    &--idle {
      color: var(--color-text-tertiary, #6b7280);
    }
  }

  // Text content
  &__text {
    line-height: 1;
    color: inherit;
  }

  // Retry button
  &__retry-button {
    margin-left: var(--spacing-sm, 0.5rem);
    font-size: var(--font-size-xs, 0.75rem);
    
    &:hover {
      background: rgba(255, 255, 255, 0.1);
    }
  }

  // State-specific styling
  &--saving {
    background: rgba(96, 165, 250, 0.1);
    border-color: rgba(96, 165, 250, 0.2);
    box-shadow: 0 0 0 1px rgba(96, 165, 250, 0.2);
  }

  &--saved {
    background: rgba(74, 222, 128, 0.1);
    border-color: rgba(74, 222, 128, 0.2);
  }

  &--error {
    background: rgba(248, 113, 113, 0.1);
    border-color: rgba(248, 113, 113, 0.2);
    box-shadow: 0 0 0 1px rgba(248, 113, 113, 0.2);
  }

  &--conflict {
    background: rgba(251, 191, 36, 0.1);
    border-color: rgba(251, 191, 36, 0.2);
    box-shadow: 0 0 0 1px rgba(251, 191, 36, 0.2);
  }

  // Success animation
  &--success-animation {
    animation: successPulse 0.6s ease-out;
  }

  // Hover states
  &:hover {
    background: rgba(255, 255, 255, 0.12);
    border-color: rgba(255, 255, 255, 0.15);
    transform: translateY(-1px);
    box-shadow: 0 6px 16px rgba(0, 0, 0, 0.2);
  }

  // Focus states for accessibility
  &:focus-within {
    outline: 2px solid var(--color-primary-500, #3b82f6);
    outline-offset: 2px;
  }

  // Mobile responsiveness
  @media (max-width: 768px) {
    height: $indicator-height-compact;
    padding: $indicator-padding-compact;
    font-size: var(--font-size-xs, 0.75rem);

    &__retry-button {
      margin-left: var(--spacing-xs, 0.25rem);
    }
  }
}

// Animations
@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}

@keyframes pulse {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0.5;
  }
}

@keyframes successPulse {
  0% {
    transform: scale(1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
  50% {
    transform: scale(1.05);
    box-shadow: 0 8px 20px rgba(74, 222, 128, 0.3);
  }
  100% {
    transform: scale(1);
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
  }
}

// Dark mode support
@media (prefers-color-scheme: dark) {
  .save-status-indicator {
    background: rgba(0, 0, 0, 0.3);
    border-color: rgba(255, 255, 255, 0.1);

    &:hover {
      background: rgba(0, 0, 0, 0.4);
      border-color: rgba(255, 255, 255, 0.15);
    }
  }
}

// High contrast mode support
@media (prefers-contrast: high) {
  .save-status-indicator {
    border-width: 2px;
    
    &__icon {
      opacity: 1;
    }
    
    &__text {
      font-weight: var(--font-weight-semibold, 600);
    }
  }
}

// Reduced motion support
@media (prefers-reduced-motion: reduce) {
  .save-status-indicator {
    transition: none;
    
    &__icon--spinning {
      animation: none;
    }
    
    &__icon--unsaved {
      animation: none;
    }
    
    &--success-animation {
      animation: none;
    }
  }
} 