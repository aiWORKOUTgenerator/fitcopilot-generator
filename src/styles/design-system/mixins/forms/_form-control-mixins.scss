/**
 * Form Control Mixins
 * 
 * This file provides reusable mixins for form control elements like checkboxes and radio buttons.
 */

@import '../../tokens/components/form-controls-tokens';

/// Form control mixin (checkbox/radio)
/// @param {String} $type [checkbox] - Control type (checkbox, radio)
/// @example scss
///   @include form-control('checkbox');
///   @include form-control('radio');
@mixin form-control($type: 'checkbox') {
  appearance: none;
  position: relative;
  width: form-control-base('size');
  height: form-control-base('size');
  cursor: pointer;
  transition: form-control-base('transition');
  
  @if $type == 'checkbox' {
    border: checkbox-token('border-width') solid checkbox-token('border');
    border-radius: checkbox-token('border-radius');
    background-color: checkbox-token('bg');
    
    &:hover:not(:disabled) {
      border-color: checkbox-token('border', 'hover');
      background-color: checkbox-token('bg', 'hover');
    }
    
    &:focus {
      outline: none;
      border-color: checkbox-token('border', 'focus');
      box-shadow: 0 0 0 3px checkbox-token('ring', 'focus');
    }
    
    &:checked {
      background-color: checkbox-token('bg', 'checked');
      border-color: checkbox-token('border', 'checked');
      
      &::after {
        content: '';
        position: absolute;
        left: 0.45rem;
        top: 0.25rem;
        width: 0.25rem;
        height: 0.5rem;
        border: solid checkbox-token('indicator-color', 'checked');
        border-width: 0 2px 2px 0;
        transform: rotate(45deg);
      }
    }
    
    &:disabled {
      opacity: form-control-base('disabled-opacity');
      cursor: not-allowed;
      background-color: checkbox-token('bg', 'disabled');
      border-color: checkbox-token('border', 'disabled');
      
      &:checked {
        background-color: checkbox-token('checked-bg', 'disabled');
      }
    }
    
    .dark-theme & {
      border-color: checkbox-token('border', null, true);
      background-color: checkbox-token('bg', null, true);
      
      &:hover:not(:disabled) {
        border-color: checkbox-token('border', 'hover', true);
        background-color: checkbox-token('bg', 'hover', true);
      }
      
      &:focus {
        border-color: checkbox-token('border', 'focus', true);
        box-shadow: 0 0 0 3px checkbox-token('ring', 'focus', true);
      }
      
      &:checked {
        background-color: checkbox-token('bg', 'checked', true);
        border-color: checkbox-token('border', 'checked', true);
        
        &::after {
          border-color: checkbox-token('indicator-color', 'checked', true);
        }
      }
      
      &:disabled {
        background-color: checkbox-token('bg', 'disabled', true);
        border-color: checkbox-token('border', 'disabled', true);
        
        &:checked {
          background-color: checkbox-token('checked-bg', 'disabled', true);
        }
      }
    }
  } @else if $type == 'radio' {
    border: radio-token('border-width') solid radio-token('border');
    border-radius: 50%;
    background-color: radio-token('bg');
    
    &:hover:not(:disabled) {
      border-color: radio-token('border', 'hover');
      background-color: radio-token('bg', 'hover');
    }
    
    &:focus {
      outline: none;
      border-color: radio-token('border', 'focus');
      box-shadow: 0 0 0 3px radio-token('ring', 'focus');
    }
    
    &:checked {
      background-color: radio-token('bg', 'checked');
      border-color: radio-token('border', 'checked');
      
      &::after {
        content: '';
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 0.5rem;
        height: 0.5rem;
        border-radius: 50%;
        background-color: radio-token('indicator-color', 'checked');
      }
    }
    
    &:disabled {
      opacity: form-control-base('disabled-opacity');
      cursor: not-allowed;
      background-color: radio-token('bg', 'disabled');
      border-color: radio-token('border', 'disabled');
      
      &:checked {
        background-color: radio-token('checked-bg', 'disabled');
      }
    }
    
    .dark-theme & {
      border-color: radio-token('border', null, true);
      background-color: radio-token('bg', null, true);
      
      &:hover:not(:disabled) {
        border-color: radio-token('border', 'hover', true);
        background-color: radio-token('bg', 'hover', true);
      }
      
      &:focus {
        border-color: radio-token('border', 'focus', true);
        box-shadow: 0 0 0 3px radio-token('ring', 'focus', true);
      }
      
      &:checked {
        background-color: radio-token('bg', 'checked', true);
        border-color: radio-token('border', 'checked', true);
        
        &::after {
          background-color: radio-token('indicator-color', 'checked', true);
        }
      }
      
      &:disabled {
        background-color: radio-token('bg', 'disabled', true);
        border-color: radio-token('border', 'disabled', true);
        
        &:checked {
          background-color: radio-token('checked-bg', 'disabled', true);
        }
      }
    }
  }
} 