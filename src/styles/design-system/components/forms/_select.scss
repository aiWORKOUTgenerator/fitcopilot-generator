/**
 * Select Component Styles
 * 
 * This file provides styles for select elements using the token system.
 */

@import '../../tokens/components/select-tokens';
@import '../../_compatibility';

// Base select styles
.select {
  display: block;
  width: 100%;
  padding: select-base('padding');
  border-radius: select-base('border-radius');
  font-weight: select-base('font-weight');
  line-height: select-base('line-height');
  @include input-bg-color();
  @include input-text-color();
  border: 1px solid;
  @include input-border();
  transition: compat-transition-preset('input');
  appearance: none;
  background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%236b7280' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
  background-position: right 0.75rem center;
  background-repeat: no-repeat;
  background-size: 1.5em 1.5em;
  padding-right: 2.5rem;
  
  &::placeholder {
    @include input-placeholder-color();
  }
  
  &:hover:not(:disabled):not(.select--error) {
    @include input-border('hover');
    @include input-bg-color('hover');
    cursor: pointer;
  }
  
  &:focus:not(:disabled):not(.select--error) {
    outline: none;
    @include input-border('focus');
    @include input-focus-ring();
  }
  
  &:disabled {
    opacity: select-base('disabled-opacity');
    @include input-bg-color('disabled');
    @include input-text-color('disabled');
    cursor: not-allowed;
  }
  
  &--error {
    @include input-border('error');
    
    &:focus {
      @include input-focus-ring('error');
    }
  }
  
  // Dark theme styles
  .dark-theme & {
    @include input-bg-color(null, true);
    @include input-text-color(null, true);
    @include input-border(null, true);
    background-image: url("data:image/svg+xml,%3csvg xmlns='http://www.w3.org/2000/svg' fill='none' viewBox='0 0 20 20'%3e%3cpath stroke='%23a0aec0' stroke-linecap='round' stroke-linejoin='round' stroke-width='1.5' d='M6 8l4 4 4-4'/%3e%3c/svg%3e");
    
    &::placeholder {
      @include input-placeholder-color(true);
    }
    
    &:hover:not(:disabled):not(.select--error) {
      @include input-border('hover', true);
      @include input-bg-color('hover', true);
    }
    
    &:focus:not(:disabled):not(.select--error) {
      @include input-border('focus', true);
      @include input-focus-ring(null, true);
    }
    
    &:disabled {
      @include input-bg-color('disabled', true);
      @include input-text-color('disabled', true);
    }
    
    &--error {
      @include input-border('error', true);
      
      &:focus {
        @include input-focus-ring('error', true);
      }
    }
  }
}

// Select size variants
.select--sm {
  padding: select-size('sm', 'padding');
  font-size: select-size('sm', 'font-size');
  background-position: right 0.5rem center;
}

.select--md {
  padding: select-size('md', 'padding');
  font-size: select-size('md', 'font-size');
}

.select--lg {
  padding: select-size('lg', 'padding');
  font-size: select-size('lg', 'font-size');
  background-position: right 1rem center;
}

// Select validation message
.select-message {
  margin-top: 0.5rem;
  font-size: var(--text-sm);
  
  &--error {
    @include form-error-styling();
    
    .dark-theme & {
      @include form-error-styling(true);
    }
  }
}

// Custom dropdown component
.select-dropdown {
  position: absolute;
  z-index: 50;
  width: 100%;
  max-height: 15rem;
  overflow-y: auto;
  @include select-dropdown-styling();
  margin-top: 0.25rem;
  
  .dark-theme & {
    @include select-dropdown-styling(true);
  }
  
  &__item {
    padding: 0.5rem 1rem;
    cursor: pointer;
    @include select-option-styling();
    transition: compat-transition-preset('color');
    
    &:hover:not(&--disabled) {
      @include select-option-styling('hover');
    }
    
    &--selected {
      @include select-option-styling('selected');
      
      &:hover {
        @include select-option-styling('selected');
      }
    }
    
    &--disabled {
      @include select-option-styling('disabled');
      cursor: not-allowed;
    }
    
    .dark-theme & {
      @include select-option-styling(null, true);
      
      &:hover:not(&--disabled) {
        @include select-option-styling('hover', true);
      }
      
      &--selected {
        @include select-option-styling('selected', true);
        
        &:hover {
          @include select-option-styling('selected', true);
        }
      }
      
      &--disabled {
        @include select-option-styling('disabled', true);
      }
    }
  }
} 