/**
 * @deprecated This file is deprecated. Use components/forms/_index.scss instead.
 * All form control styles have been moved to the forms component directory.
 */

// Don't show warning during build to reduce console noise
// @warn "The file _form-controls.scss is deprecated. Import 'components/forms/_index.scss' directly instead.";

// Import the forms component index
@import 'components/forms/index';

/**
 * Form Controls Component Styles
 * 
 * This file provides styles for form controls like checkboxes and radio buttons
 * using the token system.
 */

@import 'tokens/components/form-controls-tokens';
@import '_compatibility';

// Base form control styles
.form-control {
  &__container {
    display: flex;
    align-items: center;
    position: relative;
    margin-bottom: 0.5rem;
  }
  
  &__label {
    @include form-label-styling();
    margin-left: 0.5rem;
    font-size: var(--text-md);
    line-height: 1.5;
    cursor: pointer;
    
    .dark-theme & {
      @include form-label-styling(true);
    }
    
    &--disabled {
      @include input-text-color('disabled');
      cursor: not-allowed;
      
      .dark-theme & {
        @include input-text-color('disabled', true);
      }
    }
  }
}

// Checkbox styles
.checkbox {
  appearance: none;
  position: relative;
  width: form-control-base('size');
  height: form-control-base('size');
  border-width: checkbox-token('border-width');
  border-style: solid;
  @include input-border();
  border-radius: checkbox-token('border-radius');
  @include checkbox-bg-color();
  cursor: pointer;
  transition: compat-transition-preset('form-control');
  
  &:hover:not(:disabled) {
    @include input-border('hover');
    @include checkbox-bg-color('hover');
  }
  
  &:focus {
    outline: none;
    @include input-border('focus');
    @include input-focus-ring();
  }
  
  &:checked {
    @include checkbox-bg-color('checked');
    @include input-border('checked');
    
    &::after {
      content: '';
      position: absolute;
      left: 0.45rem;
      top: 0.25rem;
      width: 0.25rem;
      height: 0.5rem;
      border: solid checkbox-token('indicator-color', 'checked');
      border-width: 0 2px 2px 0;
      transform: rotate(45deg);
    }
  }
  
  &:disabled {
    opacity: form-control-base('disabled-opacity');
    cursor: not-allowed;
    @include checkbox-bg-color('disabled');
    @include input-border('disabled');
    
    &:checked {
      background-color: checkbox-token('checked-bg', 'disabled');
    }
  }
  
  // Dark theme
  .dark-theme & {
    @include input-border(null, true);
    @include checkbox-bg-color(null, true);
    
    &:hover:not(:disabled) {
      @include input-border('hover', true);
      @include checkbox-bg-color('hover', true);
    }
    
    &:focus {
      @include input-border('focus', true);
      @include input-focus-ring(null, true);
    }
    
    &:checked {
      @include checkbox-bg-color('checked', true);
      @include input-border('checked', true);
      
      &::after {
        border-color: checkbox-token('indicator-color', 'checked', true);
      }
    }
    
    &:disabled {
      @include checkbox-bg-color('disabled', true);
      @include input-border('disabled', true);
      
      &:checked {
        background-color: checkbox-token('checked-bg', 'disabled', true);
      }
    }
  }
}

// Radio styles
.radio {
  appearance: none;
  position: relative;
  width: form-control-base('size');
  height: form-control-base('size');
  border-width: radio-token('border-width');
  border-style: solid;
  @include input-border();
  border-radius: radio-token('border-radius');
  @include checkbox-bg-color();
  cursor: pointer;
  transition: compat-transition-preset('form-control');
  
  &:hover:not(:disabled) {
    @include input-border('hover');
    @include checkbox-bg-color('hover');
  }
  
  &:focus {
    outline: none;
    @include input-border('focus');
    @include input-focus-ring();
  }
  
  &:checked {
    @include checkbox-bg-color('checked');
    @include input-border('checked');
    
    &::after {
      content: '';
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      width: 0.5rem;
      height: 0.5rem;
      border-radius: 50%;
      background-color: radio-token('indicator', 'checked');
    }
  }
  
  &:disabled {
    opacity: form-control-base('disabled-opacity');
    cursor: not-allowed;
    @include checkbox-bg-color('disabled');
    @include input-border('disabled');
    
    &:checked::after {
      background-color: radio-token('checked-indicator', 'disabled');
    }
  }
  
  // Dark theme
  .dark-theme & {
    @include input-border(null, true);
    @include checkbox-bg-color(null, true);
    
    &:hover:not(:disabled) {
      @include input-border('hover', true);
      @include checkbox-bg-color('hover', true);
    }
    
    &:focus {
      @include input-border('focus', true);
      @include input-focus-ring(null, true);
    }
    
    &:checked {
      @include checkbox-bg-color('checked', true);
      @include input-border('checked', true);
      
      &::after {
        background-color: radio-token('indicator', 'checked', true);
      }
    }
    
    &:disabled {
      @include checkbox-bg-color('disabled', true);
      @include input-border('disabled', true);
      
      &:checked::after {
        background-color: radio-token('checked-indicator', 'disabled', true);
      }
    }
  }
}

// Checkbox/radio group
.form-control-group {
  margin: 0.5rem 0;
  
  &__title {
    @include form-label-styling();
    margin-bottom: 0.5rem;
    
    .dark-theme & {
      @include form-label-styling(true);
    }
  }
  
  &--horizontal {
    display: flex;
    flex-wrap: wrap;
    gap: 1rem;
    
    .form-control__container {
      margin-right: 1rem;
    }
  }
  
  &--vertical {
    .form-control__container {
      margin-bottom: 0.5rem;
      
      &:last-child {
        margin-bottom: 0;
      }
    }
  }
} 