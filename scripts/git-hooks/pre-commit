#!/bin/bash

# FitCopilot pre-commit hook for token validation
# This script runs token validation on staged files to enforce design system compliance

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}Running FitCopilot pre-commit hooks...${NC}"

# Get the list of staged files (only js, jsx, ts, tsx, css, scss)
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|jsx|ts|tsx|css|scss|sass)$')

# Exit if there are no relevant files
if [ -z "$STAGED_FILES" ]; then
  echo -e "${GREEN}No relevant files to check.${NC}"
  exit 0
fi

# Create a temporary file with the list of staged files
TMP_STAGED_FILES=$(mktemp)
echo "$STAGED_FILES" > "$TMP_STAGED_FILES"

echo -e "${BLUE}Validating color tokens in staged files...${NC}"

# Run token validation only on staged files
node scripts/token-validator.js --files="$TMP_STAGED_FILES"
VALIDATION_RESULT=$?

# Remove the temporary file
rm "$TMP_STAGED_FILES"

# Handle validation results
if [ $VALIDATION_RESULT -eq 0 ]; then
  echo -e "${GREEN}✓ Token validation passed.${NC}"
elif [ $VALIDATION_RESULT -eq 1 ]; then
  echo -e "${YELLOW}⚠ Token validation found issues.${NC}"
  echo -e "${YELLOW}Some files contain hardcoded color values that should be replaced with design system tokens.${NC}"
  echo -e "${YELLOW}Run 'node scripts/token-validator.js --report' to generate a detailed report.${NC}"
  echo -e "${YELLOW}See the token documentation at 'src/styles/design-system/tokens/docs/token-map.md' for guidance.${NC}"
  echo ""
  echo -e "${YELLOW}You can bypass this check with git commit --no-verify, but please fix the issues before pushing.${NC}"
  
  # Ask the user if they want to continue
  exec < /dev/tty # Redirect input to terminal to allow user input
  echo -e "${YELLOW}Do you want to commit anyway? (y/N)${NC}"
  read REPLY
  exec <&- # Close redirected input
  
  if [[ $REPLY =~ ^[Yy]$ ]]; then
    echo -e "${YELLOW}Proceeding with commit despite token validation issues...${NC}"
    exit 0
  else
    echo -e "${RED}Commit aborted. Please fix token validation issues.${NC}"
    exit 1
  fi
else
  echo -e "${RED}✗ Error running token validation.${NC}"
  exit 1
fi

exit 0 